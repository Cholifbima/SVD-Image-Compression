name: Build and Deploy to Azure Web App

on:
  push:
    branches:
      - main
      - Backend
      - fix-ukuran-besar
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: svdimagecompression-ebcvbqhzbsgfhzdz
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: 🏗️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 🔧 Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip

      - name: 📦 Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: 🧪 Test application structure
        run: |
          source venv/bin/activate
          cd src/app
          python -c "
          import sys
          sys.path.append('..')
          try:
              from svd import compress_image
              from utils import allowed_file
              print('✅ All imports working!')
          except Exception as e:
              print(f'❌ Import error: {e}')
              exit(1)
          "

      - name: 📝 Create startup script for Azure
        run: |
          cat > startup.sh << 'EOF'
          #!/bin/bash
          echo "🚀 Starting SVD Image Compression App"
          cd /home/site/wwwroot/src/app
          export PYTHONPATH="/home/site/wwwroot/src:$PYTHONPATH"
          mkdir -p /tmp/svd_uploads /tmp/svd_cache
          export FLASK_APP=app.py
          python -c "import sys; sys.path.append('..'); from svd import compress_image; print('✅ Imports OK')" || exit 1
          gunicorn --bind 0.0.0.0:8000 --timeout 600 --workers 1 app:app
          EOF
          chmod +x startup.sh

      - name: 📝 Create web.config for Azure
        run: |
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="PythonHandler" path="*" verb="*" modules="httpPlatformHandler" resourceType="Unspecified"/>
              </handlers>
              <httpPlatform processPath="/home/site/wwwroot/startup.sh"
                            arguments=""
                            stdoutLogEnabled="true"
                            stdoutLogFile="/home/LogFiles/python.log"
                            startupTimeLimit="120"
                            requestTimeout="00:10:00">
                <environmentVariables>
                  <environmentVariable name="PYTHONPATH" value="/home/site/wwwroot/src" />
                  <environmentVariable name="FLASK_APP" value="app.py" />
                </environmentVariables>
              </httpPlatform>
            </system.webServer>
          </configuration>
          EOF

      - name: 📝 Ensure requirements.txt has all dependencies
        run: |
          # Add gunicorn for Azure deployment
          if ! grep -q "gunicorn" requirements.txt; then
            echo "gunicorn>=20.1.0" >> requirements.txt
          fi

      - name: 🗜️ Create deployment package
        run: |
          # Create clean deployment package
          mkdir -p deployment
          
          # Copy application files
          cp -r src/ deployment/
          cp requirements.txt deployment/
          cp startup.sh deployment/
          cp web.config deployment/
          cp README.md deployment/ 2>/dev/null || true
          
          # Create the zip file
          cd deployment
          zip -r ../svd-app-deployment.zip . -x "*.git*" -x "*/__pycache__/*" -x "*/node_modules/*" -x "*/venv/*"
          cd ..
          
          echo "📦 Deployment package created: svd-app-deployment.zip"
          ls -la svd-app-deployment.zip

      - name: 🚀 Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: svd-app-deployment.zip

      - name: ✅ Deployment Complete
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "🌐 Your app should be available at: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          echo "🔍 Debug endpoint: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/debug"
          echo "💚 Health check: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health"
          echo "⏰ Wait 2-3 minutes for app to fully start if showing default page" 